" preferences
" encoding
set encoding=utf-8
set fileencoding=utf-8
scriptencoding utf-8
" lang
let $LANG='en_US.UTF-8'
set helplang=ja,en
" .viminfo path
set viminfo+=n~/.vim/viminfo
" line number
set number
" highlight current line
set cursorline
" cursor position
set ruler
" sign
set signcolumn=yes
" invisible character
set list
set listchars=tab:▸-,trail:⋅,nbsp:␣,extends:❯,precedes:❮
" status line
set laststatus=3
" gui setting
set guifont=GohuFont\ Nerd\ Font,X12Y16PxMaruMonica\ Nerd\ Font,PlemolJP\ Console\ NF
set guifontwide=GohuFont\ Nerd\ Font,X12Y16PxMaruMonica\ Nerd\ Font,PlemolJP\ Console\ NF
set termguicolors
set mouse-=a
set guicursor+=i:block,a:-blinkwait175-blinkoff150-blinkon175
" search
set hlsearch
set ignorecase
set smartcase
set incsearch
set noignorecase
set nowrapscan
" command history
set history=1000
" complement
set wildmenu
set completeopt=menuone,noinsert
" indent
set autoindent
set smartindent
set expandtab
set tabstop=2
set shiftwidth=2
" window split
set splitbelow
set splitright
" syntax highlight
syntax enable
" clipboard
set clipboard+=unnamedplus
" hide highlight search
nnoremap <silent> <ESC> :nohlsearch<CR>
" leader
let g:mapleader = ' '
let g:maplocalleader = ' '
" line
nnoremap j gj
nnoremap k gk
nnoremap gj j
nnoremap gk k
" buffer
nnoremap <C-k> :bprevious<CR>
nnoremap <C-j> :bnext<CR>
nnoremap <C-t> :enew<CR>
nnoremap <C-c> :bd<CR>
" visual
vnoremap <C-p> \"0p<CR>
" wsl
if !empty($WSL_DISTRO_NAME)
  " clipboard sharing
  if executable('win32yank.exe')
    augroup WSLYank
      autocmd!
      autocmd TextYankPost * :call system('win32yank.exe -i', @")
    augroup END
    autocmd VimEnter * nnoremap <silent> p :call setreg('"',system('win32yank.exe -o'))<CR>""p
  endif
endif
" plugins
call plug#begin()
  " checkhealth
  Plug 'rhysd/vim-healthcheck'
  " colorscheme
  Plug 'arcticicestudio/nord-vim'
  " fuzzy-motion
  Plug 'yuki-yano/fuzzy-motion.vim'
  Plug 'vim-denops/denops.vim',
  Plug 'lambdalisue/kensaku.vim',
  " skkeleton
  Plug 'vim-skk/skkeleton'
  Plug 'vim-denops/denops.vim'
  " yankring
  Plug 'vim-scripts/YankRing.vim'
call plug#end()
" colorscheme
colorscheme nord
" fuzzy-motion
nnoremap <silent> <LEADER><SPACE> :FuzzyMotion<CR>
let g:fuzzy_motion_matchers = ['fzf', 'kensaku']
" skkeleton
inoremap <NUL> <Plug>(skkeleton-toggle)
cnoremap <NUL> <Plug>(skkeleton-toggle)
let g:skkeleton_dictionaries = []
for file in split(glob('$XDG_DATA_HOME/skk/*'), '\n')
  call add(g:skkeleton_dictionaries, file)
endfor
function! SkkeletonConfig()
  call skkeleton#config({
  \ 'eggLikeNewline': v:true,
  \ 'globalDictionaries': g:skkeleton_dictionaries,
  \ 'immediatelyCancel': v:false,
  \ 'registerConvertResult': v:true,
  \ 'showCandidatesCount': 1,
  \ 'sources': ['skk_dictionary', 'google_japanese_input'],
  \ 'userDictionary': $XDG_STATE_HOME.'/skk/.skkeleton',
  \ })
  call skkeleton#register_keymap('henkan', '<Esc>', 'cancel')
endfunction
autocmd User skkeleton-initialize-pre call SkkeletonConfig()
" yankRing
let g:yankring_history_dir = "$XDG_STATE_HOME/yankring"
nnoremap <LEADER>yh :YRShow<CR>
